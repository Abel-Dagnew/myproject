# azure-pipelines.yml

# Define the trigger for the pipeline
trigger:
  branches:
    include:
      - main  # Adjust this to the branch you want to monitor for changes

# Define the pool where the build will run
pool:
  vmImage: 'ubuntu-latest'  # You can also use 'windows-latest' or 'macOS-latest'

# Define the build stages
stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: Build
        displayName: 'Build Job'
        steps:
          # Step to checkout the code from GitHub
          - checkout: self

          # Step to install Node.js (specify your required version)
          - task: NodeTool@0
            inputs:
              versionSpec: '14.x'  # Specify your Node.js version here
            displayName: 'Install Node.js'

          # Step to install npm dependencies
          - script: |
              npm install
            displayName: 'Install Dependencies'

          # Step to build the React application
          - script: |
              npm run build
            displayName: 'Build React App'

          # Step to run tests (if applicable)
          - script: |
              npm test -- --watchAll=false
            displayName: 'Run Tests'

          # Step to push changes to Azure DevOps repository
          - script: |
              git remote add azure https://dev.azure.com/v-abeldagnew/ExampleProject/_git/example-repo
              git push azure --all
              git push azure --tags
            displayName: 'Push to Azure DevOps Repository'
            env:
              GIT_AUTHOR_NAME: 'Your Name'  # Change this to your name
              GIT_AUTHOR_EMAIL: 'your.email@example.com'  # Change this to your email
              GIT_COMMITTER_NAME: 'Your Name'  # Change this to your name
              GIT_COMMITTER_EMAIL: 'your.email@example.com'  # Change this to your email
              AZURE_DEVOPS_PAT: $(AZURE_DEVOPS_PAT)  # Use a variable for your PAT token

  - stage: Deploy
    displayName: 'Deploy Stage'
    jobs:
      - job: Deploy
        displayName: 'Deployment Job'
        steps:
          # Step to deploy your application (replace with your deployment logic)
          - script: |
              echo "Deploying application..."
              # Add your deployment commands here (e.g., using Azure CLI or other services)
            displayName: 'Deploy Application'
